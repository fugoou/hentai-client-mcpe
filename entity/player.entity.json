 {
  "format_version": "1.10.0",
  "minecraft:client_entity": {
    "description": {
      "identifier": "minecraft:player",
      "materials": {
        "default": "entity_alphatest",
        "cape": "entity_alphatest",
        "animated": "player_animated",
        "healthbar": "healthbar_alpha"
      },
      "textures": {
        "default": "textures/entity/steve",
        "cape": "textures/entity/cape_invisible",
        "frame1": "textures/entity/frame1",
        "frame2": "textures/entity/frame2",
        "frame3": "textures/entity/frame3",
        "frame4": "textures/entity/frame4",
        "frame5": "textures/entity/frame5",
        "frame6": "textures/entity/frame6",
        "frame7": "textures/entity/frame7",
        "frame8": "textures/entity/frame8",
        "frame9": "textures/entity/frame9",
        "frame10": "textures/entity/frame10",
        "frame11": "textures/entity/frame11",
        "frame12": "textures/entity/frame12",
        "frame13": "textures/entity/frame13",
        "frame14": "textures/entity/frame14",
        "frame15": "textures/entity/frame15",
       "health1": "textures/healthbar/healthbar1",
        "health2": "textures/healthbar/healthbar2",
        "health3": "textures/healthbar/healthbar3",
        "health4": "textures/healthbar/healthbar4",
        "health5": "textures/healthbar/healthbar5",
        "health6": "textures/healthbar/healthbar6",
        "health7": "textures/healthbar/healthbar7",
        "health8": "textures/healthbar/healthbar8",
        "health9": "textures/healthbar/healthbar9",
        "health10": "textures/healthbar/healthbar10",
        "health11": "textures/healthbar/healthbar11",
        "health12": "textures/healthbar/healthbar12",
        "health13": "textures/healthbar/healthbar13",
        "health14": "textures/healthbar/healthbar14",
        "health15": "textures/healthbar/healthbar15",
        "health16": "textures/healthbar/healthbar16",
        "health17": "textures/healthbar/healthbar17",
        "health18": "textures/healthbar/healthbar18",
        "health19": "textures/healthbar/healthbar19",
        "health20": "textures/healthbar/healthbar20"
      },
      "geometry": {
        "default": "geometry.humanoid.custom",
        "cape": "geometry.cape",
        "custom": "geometry.custom",
        "healthbar": "geometry.healthbar"
      },
      "scripts": {
        "scale": "0.9375",
        "initialize": [
          "variable.is_holding_right = 0.0;",
          "variable.is_blinking = 0.0;",
          "variable.last_blink_time = 0.0;",
          "variable.hand_bob = 0.0;",
          "variable.render = 0.0;"
        ],
        "pre_animation": [
          "variable.helmet_layer_visible = 1.0;",
          "variable.leg_layer_visible = 1.0;",
          "variable.boot_layer_visible = 1.0;",
          "variable.chest_layer_visible = 1.0;",
          "variable.attack_body_rot_y = Math.sin(360*Math.sqrt(variable.attack_time)) * 5.0;",
          "variable.tcos0 = (math.cos(query.modified_distance_moved * 38.17) * query.modified_move_speed / variable.gliding_speed_value) * 57.3;",
          "variable.first_person_rotation_factor = math.sin((1 - variable.attack_time) * 180.0);",
          "variable.hand_bob = query.life_time < 0.01 ? 0.0 : variable.hand_bob + ((query.is_on_ground && query.is_alive ? math.clamp(math.sqrt(math.pow(query.position_delta(0), 2.0) + math.pow(query.position_delta(2), 2.0)), 0.0, 0.1) : 0.0) - variable.hand_bob) * 0.02;",

          "variable.map_angle = math.clamp(1 - variable.player_x_rotation / 45.1, 0.0, 1.0);",
          "variable.item_use_normalized = query.main_hand_item_use_duration / query.main_hand_item_max_duration;",
         "variable.health_1 = query.health == 1.0;",
          "variable.health_2 = query.health == 2.0;",
          "variable.health_3 = query.health == 3.0;",
          "variable.health_4 = query.health == 4.0;",
          "variable.health_5 = query.health == 5.0;",
          "variable.health_6 = query.health == 6.0;",
          "variable.health_7 = query.health == 7.0;",
          "variable.health_8 = query.health == 8.0;",
          "variable.health_9 = query.health == 9.0;",
          "variable.health_10 = query.health == 10.0;",
          "variable.health_11 = query.health == 11.0;",
          "variable.health_12 = query.health == 12.0;",
          "variable.health_13 = query.health == 13.0;",
          "variable.health_14 = query.health == 14.0;",
          "variable.health_15 = query.health == 15.0;",
          "variable.health_16 = query.health == 16.0;",
          "variable.health_17 = query.health == 17.0;",
          "variable.health_18 = query.health == 18.0;",
          "variable.health_19 = query.health == 19.0;",
          "variable.health_20 = query.health == 20.0;"
        ],
        "animate": [
          "root",
          {"render":"query.is_in_ui"}
        ]
      },
      "animations": {
        "root": "controller.animation.player.root",
        "base_controller": "controller.animation.player.base",
        "hudplayer": "controller.animation.player.hudplayer",
        "humanoid_base_pose": "animation.humanoid.base_pose",
        "look_at_target": "controller.animation.humanoid.look_at_target",
        "look_at_target_ui": "animation.player.look_at_target.ui",
        "look_at_target_default": "animation.humanoid.look_at_target.default",
        "look_at_target_gliding": "animation.humanoid.look_at_target.gliding",
        "look_at_target_swimming": "animation.humanoid.look_at_target.swimming",
        "look_at_target_inverted": "animation.player.look_at_target.inverted",
        "cape": "animation.player.cape",
        "move.arms": "animation.player.move.arms",
        "move.legs": "animation.player.move.legs",
        "swimming": "animation.player.swim",
        "swimming.legs": "animation.player.swim.legs",
        "riding.arms": "animation.player.riding.arms",
        "riding.legs": "animation.player.riding.legs",
        "holding": "animation.player.holding",
        "brandish_spear": "animation.humanoid.brandish_spear",
        "charging": "animation.humanoid.charging",
        "attack.positions": "animation.player.attack.positions",
        "attack.rotations": "animation.player.attack.rotations",
        "sneaking": "animation.player.sneaking",
        "bob": "animation.player.bob",
        "damage_nearby_mobs": "animation.humanoid.damage_nearby_mobs",
        "bow_and_arrow": "animation.humanoid.bow_and_arrow",
        "fishing_rod": "animation.humanoid.fishing_rod",
        "use_item_progress": "animation.humanoid.use_item_progress",
        "skeleton_attack": "animation.skeleton.attack",
        "sleeping": "animation.player.sleeping",
        "first_person_base_pose": "animation.player.first_person.base_pose",
        "first_person_empty_hand": "animation.player.first_person.empty_hand",
        "first_person_swap_item": "animation.player.first_person.swap_item",
        "first_person_attack_controller": "controller.animation.player.first_person_attack",
        "first_person_attack_rotation": "animation.player.first_person.attack_rotation",
        "first_person_vr_attack_rotation": "animation.player.first_person.vr_attack_rotation",
        "first_person_walk": "animation.player.first_person.walk",
        "first_person_map_controller": "controller.animation.player.first_person_map",
        "first_person_map_hold": "animation.player.first_person.map_hold",
        "first_person_map_hold_attack": "animation.player.first_person.map_hold_attack",
        "first_person_map_hold_off_hand": "animation.player.first_person.map_hold_off_hand",
        "first_person_map_hold_main_hand": "animation.player.first_person.map_hold_main_hand",
        "first_person_crossbow_equipped": "animation.player.first_person.crossbow_equipped",
        "third_person_crossbow_equipped": "animation.player.crossbow_equipped",
        "third_person_bow_equipped": "animation.player.bow_equipped",
        "crossbow_hold": "animation.player.crossbow_hold",
        "crossbow_controller": "controller.animation.player.crossbow",
        "shield_block_main_hand": "animation.player.shield_block_main_hand",
        "shield_block_off_hand": "animation.player.shield_block_off_hand",
        "blink": "controller.animation.persona.blink"
      },
      "render_controllers": [
        { "controller.render.player.first_person": "variable.is_first_person" },
        { "controller.render.player.third_person": "!variable.is_first_person && !variable.map_face_icon" },
        { "controller.render.player.map": "variable.map_face_icon" },
        {"controller.render.cape":"query.armor_texture_slot(1) != 5 && (variable.is_paperdoll || (variable.render == 1.0 && !variable.is_first_person))"},
       {
          "controller.render.has_health_1": "variable.health_1 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_2": "variable.health_2 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_3": "variable.health_3 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_4": "variable.health_4 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_5": "variable.health_5 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_6": "variable.health_6 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_7": "variable.health_7 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_8": "variable.health_8 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_9": "variable.health_9 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_10": "variable.health_10 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_11": "variable.health_11 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_12": "variable.health_12 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_13": "variable.health_13 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_14": "variable.health_14 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_15": "variable.health_15 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_16": "variable.health_16 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_17": "variable.health_17 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_18": "variable.health_18 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_19": "variable.health_19 && !variable.is_first_person"
        },
        {
          "controller.render.has_health_20": "variable.health_20 && !variable.is_first_person"
        }
      ],
      "enable_attachables": true
    }
  }
}
// && variable.is_paperdoll || (variable.render == 1.0 && !variable.is_first_person)